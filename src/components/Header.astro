---
import { authors, descriptions } from "../ts/vars";
import ChatController from "../controllers/chat";
import Markov, { generateByLetter } from "../ts/markov";
import graphsData from "../data/graphs.json";

const graphCaptions = graphsData.map((g) => g.caption);
const trainingData = [...graphCaptions, ...descriptions, ...authors];
const markov = new Markov();
await markov.load(trainingData);
const markovText = markov.generate(10);
const markovText2 = await generateByLetter(trainingData, 50);

// kind of alternate between the two to make a hybrid
// for each word 50% of the time use markovText2
const randomText = markovText
  .split(" ")
  .map((word, index) => {
    if (Math.random() < 0.5) {
      return markovText2.split(" ")[index] || word;
    }
    return word;
  })
  .join(" ");

// math equation to generate the accurate number of the day
const x = new Date().getDate();
const y = new Date().getSeconds();
const z = new Date().getMilliseconds();
const accurateNumberStage1 = (x * y) / z;
const accurateNumberStage2 =
  accurateNumberStage1 % 1.785298349182997561289487198679829683916825689;
const accurateNumberStage3 = accurateNumberStage2 / 1000000000000000000;
let accuracyPercentage =
  1.128943789237891598723789147928789152897267891237086812735653 *
    100.5782384172874 +
  Math.sin(accurateNumberStage2) * 10008.5782384172874;

if (Math.random() < 0.1) {
  accuracyPercentage += 500000;
}

let accuracyStyle = `color: hsl(${accuracyPercentage}, 100%, 50%); font-weight: bold;`;

const messages = ChatController.getInstance().getMessages();
---

<script>
  const button = document.getElementById("accuRotateBtn");
  const audio: HTMLAudioElement | null = document.getElementById(
    "accuRotateAudio",
  ) as HTMLAudioElement;
  const credits = document.getElementById("credits");

  if (button) {
    button.textContent = "enable accurotate technology";
    button.removeAttribute("disabled");

    button.addEventListener("click", () => {
      const isEnabled = document.body.classList.contains("animate-rotate3d");

      if (isEnabled) {
        // Disable the accurotate technology
        document.body.classList.remove("animate-rotate3d");
        document.body.classList.add("animate-move");
        button.textContent = "enable accurotate technology";

        if (audio) {
          audio.pause();
          audio.currentTime = 0;
        }

        if (credits) {
          credits.classList.add("invisible");
          credits.classList.remove("animate-vibrate2x");
        }
      } else {
        // Enable the accurotate technology
        document.body.style.cursor =
          "url('/assets/svg/middlefinger.svg'), auto";
        document.body.classList.remove("animate-move");
        document.body.classList.add("animate-rotate3d");
        button.textContent = "disable accurotate technology";

        if (audio) {
          audio.play();
        }

        if (credits) {
          credits.classList.remove("invisible");
          credits.classList.add("animate-vibrate2x");
        }
      }
    });
  } else {
    console.error('Button with id "accuRotateBtn" not found');
  }
</script>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("chat");
    const input = document.getElementById("message");
    let lastSubmittedMessage = "";

    form.addEventListener("submit", (e) => {
      e.preventDefault();
      lastSubmittedMessage = input.value;

      fetch("/api/chat", {
        method: "POST",
        body: JSON.stringify({ message: input.value }),
        headers: { "Content-Type": "application/json" },
      });
      input.value = "";
      input.focus();
    });

    function setupEventSource() {
      const eventSource = new EventSource("/api/stream");

      eventSource.onmessage = (event) => {
        const messages = document.getElementById("messages");

        // Ignore heartbeats (empty messages)
        if (!event.data) return;

        // Create the new message element
        const li = document.createElement("li");
        li.className = "text-sm text-white list-none text-left";

        // Compare with the saved message
        if (lastSubmittedMessage === JSON.parse(event.data)) {
          li.innerText = "YOU: " + JSON.parse(event.data);
          lastSubmittedMessage = "";
        } else {
          li.innerText = JSON.parse(event.data);
        }

        messages.appendChild(li);

        // Remove old messages
        while (messages.children.length > 5) {
          messages.removeChild(messages.firstChild);
        }
      };

      // Handle errors and reconnect if needed
      eventSource.onerror = () => {
        console.log("EventSource connection failed, reconnecting...");
        eventSource.close();
        // Reconnect after a short delay
        setTimeout(setupEventSource, 2000);
      };
    }

    // Initial setup
    setupEventSource();
  });
</script>

<header class="text-center text-white py-8">
  <h1 class="text-3xl font-bold text-grain-text hover:animate-vibrate2x">
    <a href="/fizzbuzz" class="hover:underline">accuratelinuxgraphs.com</a>
    <p>{randomText}</p>
  </h1>

  <p class="text-lg mt-2">
    YOUR source for the most ACCURATE linux graphs around.
  </p>

  <div class="flex flex-col items-center lg:flex-row justify-center">
    <a href="/graph"
      ><img
        id="site-icon"
        src="/assets/ico/grain.png"
        alt="Site Icon"
        title="a project of the grain"
        class="w-64 h-16"
      /></a
    >
    <p
      class="text-sm text-gray-400 transform-[scaleZ(4)] animate-vibrate lg:animate-none lg:transform-[scaleY(4)]"
    >
      Accurate Number: <span
        id="accurate-number"
        class="font-bold text-yellow-300">{accurateNumberStage3}</span
      ><br />
      Accuracy Percentage: <span
        id="accuracy-percentage"
        style={accuracyStyle}
        class="font-bold text-yellow-300">{accuracyPercentage}%</span
      >
    </p>

    <button
      id="accuRotateBtn"
      class="mt-4 bg-grain-bg border-grain-border border-8 hover:bg-red-900"
      disabled
    >
      enable js you idiot
    </button>

    <audio
      controls
      autoplay
      loop
      class="mt-4 mx-auto block hover:animate-vibrate"
    >
      <source src="/assets/audio/free-software-song.ogg" type="audio/ogg" />
      Your browser does not support the audio element. Seek help.
    </audio>

    <a href="https://store.accuratelinuxgraphs.com"
      ><img
        src="/assets/img/ad.gif"
        alt="Ad"
        class="w-64 h-16 mt-4 mx-auto"
        title="Ad"
      /></a
    >

    <a href="https://stats.atl.dev"
      ><img
        src="/assets/img/ad2.gif"
        alt="Ad"
        class="w-64 h-16 mt-4 mx-auto"
        title="Ad"
      /></a
    >

    <div class="bg-grain-panel rounded-lg p-4 mt-4">
      <h2 class="text-xl font-bold mb-2">Chat</h2>
      <ul id="messages" class="list-disc pl-5 font-bold bg-grain-bg">
        {
          messages.map((message) => (
            <li class="text-sm text-white list-none text-left">{message}</li>
          ))
        }
      </ul>
      <form id="chat">
        <input
          type="text"
          id="message"
          class="border border-gray-300 rounded px-2 py-1 w-full mt-2"
          placeholder="Type your message here..."
        />
        <input type="submit" hidden />
      </form>
    </div>
    <audio loop id="accuRotateAudio" class="hidden">
      <source
        src="/assets/audio/extremebinarydrumandbass.mp3"
        type="audio/mp3"
        id="accuRotateAudio2"
      />
      Your browser does not support the audio element. Seek help.
    </audio>
    <p class="invisible" id="credits">
      AccuRotate Audio Credit: <a
        href="https://opengameart.org/content/extreme-binary-dnb"
        >Gobusto - Extreme Binary DnB</a
      >
    </p>

    <hr class="animate-ping" />
  </div>
</header>
