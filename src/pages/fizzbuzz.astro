---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";

const fizzbuzz = (n: number) => {
  let result = [];
  for (let i = 1; i <= n; i++) {
    if (i % 3 === 0 && i % 5 === 0) {
      result.push("FizzBuzz");
    } else if (i % 3 === 0) {
      result.push("Fizz");
    } else if (i % 5 === 0) {
      result.push("Buzz");
    } else {
      result.push(i);
    }
  }
  return result;
};
---

<script>
  // on click of anywhere on the site, spawn 10 oscillators playing droning randomized notes
  // and play them forever
  document.addEventListener("click", () => {
    // Create audio context
    const audioContext = new (window.AudioContext ||
      window.webkitAudioContext)();
    const oscillators = [];
    const gainNodes = [];
    const types = ["sine", "square", "sawtooth", "triangle"];

    // Create 10 oscillators
    for (let i = 0; i < 10; i++) {
      // Create oscillator
      const oscillator = audioContext.createOscillator();

      // Set initial frequency
      oscillator.frequency.value = Math.random() * 400 + 100;

      // Set initial type
      oscillator.type = types[Math.floor(Math.random() * types.length)];

      // Create gain node for volume control
      const gainNode = audioContext.createGain();
      gainNode.gain.value = 0.1; // Low volume to avoid being too loud

      // Connect oscillator to gain node and gain node to output
      oscillator.connect(gainNode);
      gainNode.connect(audioContext.destination);

      // Save references to oscillators and gain nodes
      oscillators.push(oscillator);
      gainNodes.push(gainNode);

      // Start oscillator
      oscillator.start();
    }

    // Set interval to randomize parameters every 0.1 seconds
    setInterval(() => {
      for (let i = 0; i < oscillators.length; i++) {
        // Randomize frequency
        oscillators[i].frequency.value = Math.random() * 400 + 100;

        // Randomize type
        oscillators[i].type = types[Math.floor(Math.random() * types.length)];

        // Randomize volume slightly
        gainNodes[i].gain.value = Math.random() * 0.08 + 0.05; // Between 0.05 and 0.13
      }
    }, 100); // 100ms = 0.1 seconds
  });

  // DVD logo bouncing animation - Enhanced with more randomness
  document.addEventListener('DOMContentLoaded', () => {
    // Create a container for all logos that will be on top of everything
    const container = document.createElement('div');
    container.className = 'logo-container';
    document.body.appendChild(container);
    
    const numLogos = 500;
    
    // Create logos immediately
    for (let i = 0; i < numLogos; i++) {
      // Create a new DVD logo element
      const dvdLogo = document.createElement('div');
      dvdLogo.className = 'dvd-logo';
      
      const size = Math.random() * 25;
      
      // Random rotation
      const rotation = Math.random() * 360;
      
      // Random opacity for some logos
      const opacity = Math.random() * 0.5 + 0.5; // Between 0.5 and 1.0
      
      // Use inline styles with more randomized properties
      dvdLogo.style.cssText = `
        position: absolute;
        width: ${size}px;
        height: ${size}px;
        z-index: 9999;
        transform: rotate(${rotation}deg);
        opacity: ${opacity};
      `;
      
      dvdLogo.innerHTML = `<img src="/assets/svg/middlefinger.svg" alt="Bouncing Logo" width="${size}" height="${size}" />`;
      container.appendChild(dvdLogo);
      
      // More random starting positions across the entire viewport
      let x = Math.random() * window.innerWidth;
      let y = Math.random() * window.innerHeight;
      
      dvdLogo.style.left = `${x}px`;
      dvdLogo.style.top = `${y}px`;
      
      // Much more random velocities - between -8 and 8 pixels per frame
      let vx = (Math.random() * 8) * (Math.random() > 0.5 ? 1 : -1);
      let vy = (Math.random() * 8) * (Math.random() > 0.5 ? 1 : -1);
      
      // Add random spin for some elements
      const shouldSpin = Math.random() > 0.7;
      const spinSpeed = (Math.random() * 3) * (Math.random() > 0.5 ? 1 : -1);
      let currentRotation = rotation;
      
      // Start animation immediately - no delay
      function animate() {
        // Update position
        x += vx;
        y += vy;
        
        // Bounce off edges with slight velocity randomization
        if (x <= 0 || x >= window.innerWidth - size) {
          vx = -vx * (Math.random() * 0.2 + 0.9); // Add slight randomness to bounce
          x = Math.max(0, Math.min(x, window.innerWidth - size));
        }
        if (y <= 0 || y >= window.innerHeight - size) {
          vy = -vy * (Math.random() * 0.2 + 0.9); // Add slight randomness to bounce
          y = Math.max(0, Math.min(y, window.innerHeight - size));
        }
        
        // Apply rotation if this element should spin
        if (shouldSpin) {
          currentRotation += spinSpeed;
          dvdLogo.style.transform = `rotate(${currentRotation}deg)`;
        }
        
        // Update element position
        dvdLogo.style.left = `${x}px`;
        dvdLogo.style.top = `${y}px`;
        
        requestAnimationFrame(animate);
      }
      
      // Start animation immediately
      animate();
    }
  });
</script>

<Layout>
  <Header />
  <div class="items-center justify-center h-screen">
    <h2 class="text-2xl font-bold mb-4">FizzBuzz Results (tornado warning)</h2>
    <ul class="list-disc">
      {
        fizzbuzz(50).map((item) => (
          <li
            class="text-lg animate-spin"
            style={{ animationDelay: `${Math.random() * 2}s` }}
          >
            <span class="animate-rotatewidenvibrate">{item}</span>
          </li>
        ))
      }
    </ul>
  </div>
</Layout>

<style>
  /* Container that will hold all the logos */
  .logo-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: 9999;
    pointer-events: none; /* Let clicks pass through */
    overflow: hidden;
  }

  .dvd-logo {
    position: absolute;
    pointer-events: none;
    will-change: transform, left, top; /* Performance optimization */
  }
  
  .dvd-logo img {
    display: block;
    width: 100%;
    height: 100%;
  }
</style>